краткие и важные моменты
------------------------------------------
виртуальный метод можно переопределить, абстрактный - нужно.
-- 
--виды паттернов 
--порождающие - позволяют произвести инициализацию обьектов наиболее
удобным и оптимальным способом
порождающие - паттерны заобтятся о гибком создании новых обьектов без внесения в программу лишних зависимостей.
--структурные - описывают взаимоотношения между различными классами или обектами
позволяя им совместно реализовывать поставленную задачу
структурные - паттерны показывают разные сопсобы построения связей между обьектами
--поведенческие - позволяют грамотно организиовывать ссвязь между сущностями 
для оптимизации и упрощения их взаимодействия
поведенческие - паттерны забоятся о правильной комуникации между обьектами 
--
--
принциппы ооп 
--абстракция - позволяет работать с обьектами не вдаваясь в подробности их реализации. те можно абстрогировать внутреенеее утройство того или иного класса.
--Наследование — это первое, что приходит в голову многим программистам, когда нужно расширить какое-то существующее поведение. Но механизм наследования имеет несколько досадных проблем.
Он статичен. Вы не можете изменить поведение существующего объекта. Для этого вам надо создать новый объект, выбрав другой подкласс.
Он не разрешает наследовать поведение нескольких классов одновременно. Из-за этого вам приходится создавать множество подклассов-комбинаций для получения совмещённого поведения. 
---инкапсуляция обьект не дожен изменятся извне кроме как через собственные методы
обьект не только класс, но и другие структуры боле высокого уровня pgagges, nampases, module, submodule